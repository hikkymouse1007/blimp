syntax = "proto3";

package blimp.sandbox.v0;

import "blimp/errors/v0/errors.proto";

option go_package = "github.com/kelda-inc/blimp/pkg/proto/sandbox";

service Controller {
  rpc Tunnel(stream TunnelMsg) returns (stream TunnelMsg) {}
  rpc UpdateVolumeHashes(UpdateVolumeHashesRequest) returns (UpdateVolumeHashesResponse) {}
}

message TunnelHeader{
    string name = 1;
    uint32 port = 2; // Unused for volume streams
    string token = 3;
}

message EOF {}

// The first message the Client sends to the server must be a header.  After
// that all messages either direction must be bufs.  Optionally, either
// direction may send an EOF to indicate they have no more to send.
message TunnelMsg {
  oneof msg {
    blimp.errors.v0.Error error = 1;
    TunnelHeader header = 2;
    bytes buf = 3;
    EOF eof = 4;
  }
}

message UpdateVolumeHashesRequest {
  map<string, string> hashes = 1;
}

message UpdateVolumeHashesResponse {
  blimp.errors.v0.Error error = 2;
}
