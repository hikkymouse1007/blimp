// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blimp/sandbox/v0/waiter.proto

package sandbox

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckReadyRequest struct {
	WaitSpec             *WaitSpec `protobuf:"bytes,1,opt,name=wait_spec,json=waitSpec,proto3" json:"wait_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CheckReadyRequest) Reset()         { *m = CheckReadyRequest{} }
func (m *CheckReadyRequest) String() string { return proto.CompactTextString(m) }
func (*CheckReadyRequest) ProtoMessage()    {}
func (*CheckReadyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_845dc80cbf17fb57, []int{0}
}

func (m *CheckReadyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReadyRequest.Unmarshal(m, b)
}
func (m *CheckReadyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReadyRequest.Marshal(b, m, deterministic)
}
func (m *CheckReadyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReadyRequest.Merge(m, src)
}
func (m *CheckReadyRequest) XXX_Size() int {
	return xxx_messageInfo_CheckReadyRequest.Size(m)
}
func (m *CheckReadyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReadyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReadyRequest proto.InternalMessageInfo

func (m *CheckReadyRequest) GetWaitSpec() *WaitSpec {
	if m != nil {
		return m.WaitSpec
	}
	return nil
}

type WaitSpec struct {
	DependsOn            []string `protobuf:"bytes,1,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`
	SyncthingFolders     []string `protobuf:"bytes,2,rep,name=syncthing_folders,json=syncthingFolders,proto3" json:"syncthing_folders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitSpec) Reset()         { *m = WaitSpec{} }
func (m *WaitSpec) String() string { return proto.CompactTextString(m) }
func (*WaitSpec) ProtoMessage()    {}
func (*WaitSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_845dc80cbf17fb57, []int{1}
}

func (m *WaitSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitSpec.Unmarshal(m, b)
}
func (m *WaitSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitSpec.Marshal(b, m, deterministic)
}
func (m *WaitSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitSpec.Merge(m, src)
}
func (m *WaitSpec) XXX_Size() int {
	return xxx_messageInfo_WaitSpec.Size(m)
}
func (m *WaitSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitSpec.DiscardUnknown(m)
}

var xxx_messageInfo_WaitSpec proto.InternalMessageInfo

func (m *WaitSpec) GetDependsOn() []string {
	if m != nil {
		return m.DependsOn
	}
	return nil
}

func (m *WaitSpec) GetSyncthingFolders() []string {
	if m != nil {
		return m.SyncthingFolders
	}
	return nil
}

type CheckReadyResponse struct {
	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	// An optional message providing more information on why the container
	// needs to wait.
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckReadyResponse) Reset()         { *m = CheckReadyResponse{} }
func (m *CheckReadyResponse) String() string { return proto.CompactTextString(m) }
func (*CheckReadyResponse) ProtoMessage()    {}
func (*CheckReadyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_845dc80cbf17fb57, []int{2}
}

func (m *CheckReadyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckReadyResponse.Unmarshal(m, b)
}
func (m *CheckReadyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckReadyResponse.Marshal(b, m, deterministic)
}
func (m *CheckReadyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckReadyResponse.Merge(m, src)
}
func (m *CheckReadyResponse) XXX_Size() int {
	return xxx_messageInfo_CheckReadyResponse.Size(m)
}
func (m *CheckReadyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckReadyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckReadyResponse proto.InternalMessageInfo

func (m *CheckReadyResponse) GetReady() bool {
	if m != nil {
		return m.Ready
	}
	return false
}

func (m *CheckReadyResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckReadyRequest)(nil), "blimp.sandbox.v0.CheckReadyRequest")
	proto.RegisterType((*WaitSpec)(nil), "blimp.sandbox.v0.WaitSpec")
	proto.RegisterType((*CheckReadyResponse)(nil), "blimp.sandbox.v0.CheckReadyResponse")
}

func init() {
	proto.RegisterFile("blimp/sandbox/v0/waiter.proto", fileDescriptor_845dc80cbf17fb57)
}

var fileDescriptor_845dc80cbf17fb57 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x74, 0x2b, 0x96, 0xee, 0xf3, 0xd2, 0x06, 0x91, 0xa5, 0x50, 0x28, 0xab, 0x87, 0x82, 0x9a,
	0x2d, 0xf5, 0xe0, 0xbd, 0x82, 0x27, 0x41, 0x88, 0x60, 0xd1, 0x4b, 0xc9, 0x26, 0xcf, 0x6d, 0x68,
	0x9b, 0xc4, 0x4d, 0xda, 0xda, 0xbf, 0x97, 0x66, 0xb7, 0x2a, 0x16, 0xbc, 0x65, 0x66, 0xde, 0x0b,
	0xf3, 0x66, 0xa0, 0x97, 0x2f, 0xd4, 0xd2, 0x66, 0x8e, 0x6b, 0x99, 0x9b, 0xcf, 0x6c, 0x3d, 0xcc,
	0x36, 0x5c, 0x79, 0x2c, 0xa9, 0x2d, 0x8d, 0x37, 0xa4, 0x1d, 0x64, 0x5a, 0xcb, 0x74, 0x3d, 0x4c,
	0x1f, 0xa1, 0x73, 0x3f, 0x43, 0x31, 0x67, 0xc8, 0xe5, 0x96, 0xe1, 0xc7, 0x0a, 0x9d, 0x27, 0x77,
	0x10, 0xef, 0xd6, 0xa6, 0xce, 0xa2, 0x48, 0xa2, 0x7e, 0x34, 0x38, 0x1d, 0x75, 0xe9, 0xdf, 0x55,
	0x3a, 0xe1, 0xca, 0x3f, 0x5b, 0x14, 0xac, 0xb5, 0xa9, 0x5f, 0xe9, 0x0b, 0xb4, 0xf6, 0x2c, 0xe9,
	0x01, 0x48, 0xb4, 0xa8, 0xa5, 0x9b, 0x1a, 0x9d, 0x44, 0xfd, 0xe3, 0x41, 0xcc, 0xe2, 0x9a, 0x79,
	0xd2, 0xe4, 0x0a, 0x3a, 0x6e, 0xab, 0x85, 0x9f, 0x29, 0x5d, 0x4c, 0xdf, 0xcd, 0x42, 0x62, 0xe9,
	0x92, 0x46, 0x98, 0x6a, 0x7f, 0x0b, 0x0f, 0x15, 0x9f, 0x8e, 0x81, 0xfc, 0x76, 0xe9, 0xac, 0xd1,
	0x0e, 0xc9, 0x19, 0x9c, 0x94, 0x3b, 0x22, 0x58, 0x6c, 0xb1, 0x0a, 0x90, 0x73, 0x68, 0x96, 0xc8,
	0x9d, 0xd1, 0x49, 0xa3, 0x1f, 0x0d, 0x62, 0x56, 0xa3, 0x51, 0x01, 0x30, 0x36, 0xc6, 0x4f, 0x42,
	0x1e, 0xe4, 0x15, 0xe0, 0xe7, 0x47, 0x72, 0x71, 0x78, 0xdd, 0x41, 0x2a, 0xdd, 0xcb, 0xff, 0x87,
	0x2a, 0x53, 0xe9, 0xd1, 0x98, 0xbe, 0x5d, 0x17, 0xca, 0xcf, 0x56, 0x39, 0x15, 0x66, 0x99, 0xcd,
	0x71, 0x21, 0xf9, 0x8d, 0xd2, 0x22, 0xab, 0xaa, 0xb1, 0xf3, 0x22, 0x0b, 0x65, 0xec, 0x4b, 0xca,
	0x9b, 0x01, 0xde, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x20, 0x64, 0xe4, 0x80, 0xbc, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BootWaiterClient is the client API for BootWaiter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BootWaiterClient interface {
	CheckReady(ctx context.Context, in *CheckReadyRequest, opts ...grpc.CallOption) (*CheckReadyResponse, error)
}

type bootWaiterClient struct {
	cc grpc.ClientConnInterface
}

func NewBootWaiterClient(cc grpc.ClientConnInterface) BootWaiterClient {
	return &bootWaiterClient{cc}
}

func (c *bootWaiterClient) CheckReady(ctx context.Context, in *CheckReadyRequest, opts ...grpc.CallOption) (*CheckReadyResponse, error) {
	out := new(CheckReadyResponse)
	err := c.cc.Invoke(ctx, "/blimp.sandbox.v0.BootWaiter/CheckReady", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BootWaiterServer is the server API for BootWaiter service.
type BootWaiterServer interface {
	CheckReady(context.Context, *CheckReadyRequest) (*CheckReadyResponse, error)
}

// UnimplementedBootWaiterServer can be embedded to have forward compatible implementations.
type UnimplementedBootWaiterServer struct {
}

func (*UnimplementedBootWaiterServer) CheckReady(ctx context.Context, req *CheckReadyRequest) (*CheckReadyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckReady not implemented")
}

func RegisterBootWaiterServer(s *grpc.Server, srv BootWaiterServer) {
	s.RegisterService(&_BootWaiter_serviceDesc, srv)
}

func _BootWaiter_CheckReady_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckReadyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootWaiterServer).CheckReady(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blimp.sandbox.v0.BootWaiter/CheckReady",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootWaiterServer).CheckReady(ctx, req.(*CheckReadyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BootWaiter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blimp.sandbox.v0.BootWaiter",
	HandlerType: (*BootWaiterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckReady",
			Handler:    _BootWaiter_CheckReady_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blimp/sandbox/v0/waiter.proto",
}
