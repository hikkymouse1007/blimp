// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blimp/sandbox/v0/manager.proto

package sandbox

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/kelda-inc/blimp/pkg/proto/errors"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("blimp/sandbox/v0/manager.proto", fileDescriptor_d576fe4bfe8d36c7) }

var fileDescriptor_d576fe4bfe8d36c7 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xca, 0xc9, 0xcc,
	0x2d, 0xd0, 0x2f, 0x4e, 0xcc, 0x4b, 0x49, 0xca, 0xaf, 0xd0, 0x2f, 0x33, 0xd0, 0xcf, 0x4d, 0xcc,
	0x4b, 0x4c, 0x4f, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x00, 0xcb, 0xeb, 0x41,
	0xe5, 0xf5, 0xca, 0x0c, 0xa4, 0x64, 0x20, 0x3a, 0x52, 0x8b, 0x8a, 0xf2, 0x8b, 0x8a, 0x41, 0x1a,
	0x20, 0x2c, 0x88, 0x7a, 0x23, 0x4e, 0x2e, 0x76, 0x5f, 0x88, 0x01, 0x4e, 0x7a, 0x51, 0x3a, 0xe9,
	0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xd9, 0xa9, 0x39, 0x29, 0x89, 0xba,
	0x99, 0x79, 0xc9, 0xfa, 0x10, 0xfd, 0x05, 0xd9, 0xe9, 0xfa, 0x60, 0x2d, 0x30, 0xbb, 0x93, 0xd8,
	0xc0, 0x5c, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x66, 0x9c, 0x75, 0xc0, 0x93, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ManagerClient is the client API for Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerClient interface {
}

type managerClient struct {
	cc *grpc.ClientConn
}

func NewManagerClient(cc *grpc.ClientConn) ManagerClient {
	return &managerClient{cc}
}

// ManagerServer is the server API for Manager service.
type ManagerServer interface {
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blimp.sandbox.v0.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "blimp/sandbox/v0/manager.proto",
}
